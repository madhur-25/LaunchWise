generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Experiment {
  id          String    @id @default(cuid())
  name        String
  description String?
  status      Status    @default(DRAFT)
  startDate   DateTime?
  endDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  teamId      String
  apiKeyId    String
  totalEvents Int       @default(0)
  apiKey      ApiKey    @relation(fields: [apiKeyId], references: [id])
  team        Team      @relation(fields: [teamId], references: [id])
  variants    Variant[]

  @@unique([teamId, name])
  @@index([status])
}

model Variant {
  id           String     @id @default(cuid())
  name         String
  trafficSplit Float      @default(0.5)
  isControl    Boolean    @default(false)
  experimentId String
  events       Event[]
  experiment   Experiment @relation(fields: [experimentId], references: [id], onDelete: Cascade)

  @@index([experimentId, isControl])
}

model Event {
  id        String    @id @default(cuid())
  type      EventType
  metadata  Json?
  sessionId String
  userId    String?
  url       String?
  userAgent String?
  country   String?
  createdAt DateTime  @default(now())
  variantId String
  variant   Variant   @relation(fields: [variantId], references: [id], onDelete: Cascade)

  @@index([variantId, createdAt])
  @@index([type])
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  role      UserRole @default(MEMBER)
  createdAt DateTime @default(now())
  teamId    String
  password  String
  team      Team     @relation(fields: [teamId], references: [id])
}

model Team {
  id          String       @id @default(cuid())
  name        String
  createdAt   DateTime     @default(now())
  apiKeys     ApiKey[]
  experiments Experiment[]
  users       User[]
}

model ApiKey {
  id          String       @id @default(cuid())
  key         String       @unique @default(uuid())
  lastUsedAt  DateTime?
  createdAt   DateTime     @default(now())
  teamId      String
  team        Team         @relation(fields: [teamId], references: [id])
  experiments Experiment[]
}

enum Status {
  DRAFT
  RUNNING
  PAUSED
  COMPLETED
}

enum EventType {
  CLICK
  CONVERSION
  PAGEVIEW
  CUSTOM
}

enum UserRole {
  OWNER
  ADMIN
  MEMBER
}
